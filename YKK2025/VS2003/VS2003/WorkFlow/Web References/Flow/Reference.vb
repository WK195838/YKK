'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2503
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 1.1.4322.2503。
'
Namespace Flow
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FlowServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Public Class FlowService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://10.245.1.50/WFS/FlowService.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewFlow", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal pApplyID As String) As Integer
            Dim results() As Object = Me.Invoke("NewFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser, pApplyID})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginNewFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal pApplyID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NewFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser, pApplyID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndNewFlow(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EndFlow", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EndFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal pApplyID As String) As Integer
            Dim results() As Object = Me.Invoke("EndFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser, pApplyID})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginEndFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal pApplyID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EndFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser, pApplyID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndEndFlow(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFlow", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pDepo As String, ByVal pUser As String, ByRef pEnd As Integer) As Integer
            Dim results() As Object = Me.Invoke("CheckFlow", New Object() {pFormNo, pFormSno, pStep, pDepo, pUser, pEnd})
            pEnd = CType(results(1),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginCheckFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal pEnd As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CheckFlow", New Object() {pFormNo, pFormSno, pStep, pDepo, pUser, pEnd}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCheckFlow(ByVal asyncResult As System.IAsyncResult, ByRef pEnd As Integer) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pEnd = CType(results(1),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFlow", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginUpdateFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndUpdateFlow(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NextFlow", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NextFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal pNextUser As String, ByVal pAgentID As String, ByVal pApplyID As String, ByVal pStartTime As Date, ByVal pEndTime As Date, ByVal pImportant As Integer) As Integer
            Dim results() As Object = Me.Invoke("NextFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser, pNextUser, pAgentID, pApplyID, pStartTime, pEndTime, pImportant})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginNextFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pUser As String, ByVal pNextUser As String, ByVal pAgentID As String, ByVal pApplyID As String, ByVal pStartTime As Date, ByVal pEndTime As Date, ByVal pImportant As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NextFlow", New Object() {pFormNo, pFormSno, pStep, pSeqNo, pDepo, pUser, pNextUser, pAgentID, pApplyID, pStartTime, pEndTime, pImportant}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndNextFlow(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteArrangFlow", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteArrangFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pNextStep As Integer, ByVal pSeqNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteArrangFlow", New Object() {pFormNo, pFormSno, pNextStep, pSeqNo})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginDeleteArrangFlow(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pNextStep As Integer, ByVal pSeqNo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteArrangFlow", New Object() {pFormNo, pFormSno, pNextStep, pSeqNo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndDeleteArrangFlow(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
    End Class
End Namespace
