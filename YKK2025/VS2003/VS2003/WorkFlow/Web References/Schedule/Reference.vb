'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2503
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 1.1.4322.2503。
'
Namespace Schedule
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ScheduleServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Public Class ScheduleService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://10.245.1.50/WFS/ScheduleService.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLastTime(ByVal pUser As String, ByVal pFormNo As String, ByVal pStep As Integer, ByVal pFlowType As Integer, ByVal pNowDateTime As Date, ByRef pLastTime As Date, ByRef pCount1 As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetLastTime", New Object() {pUser, pFormNo, pStep, pFlowType, pNowDateTime, pLastTime, pCount1})
            pLastTime = CType(results(1),Date)
            pCount1 = CType(results(2),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetLastTime(ByVal pUser As String, ByVal pFormNo As String, ByVal pStep As Integer, ByVal pFlowType As Integer, ByVal pNowDateTime As Date, ByVal pLastTime As Date, ByVal pCount1 As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLastTime", New Object() {pUser, pFormNo, pStep, pFlowType, pNowDateTime, pLastTime, pCount1}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetLastTime(ByVal asyncResult As System.IAsyncResult, ByRef pLastTime As Date, ByRef pCount1 As Integer) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pLastTime = CType(results(1),Date)
            pCount1 = CType(results(2),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDevelopTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDevelopTime(ByVal pStartTime As String, ByVal pEndTime As String, ByRef pDevelopTime As Integer, ByVal pDepo As String) As Integer
            Dim results() As Object = Me.Invoke("GetDevelopTime", New Object() {pStartTime, pEndTime, pDevelopTime, pDepo})
            pDevelopTime = CType(results(1),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetDevelopTime(ByVal pStartTime As String, ByVal pEndTime As String, ByVal pDevelopTime As Integer, ByVal pDepo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDevelopTime", New Object() {pStartTime, pEndTime, pDevelopTime, pDepo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetDevelopTime(ByVal asyncResult As System.IAsyncResult, ByRef pDevelopTime As Integer) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pDevelopTime = CType(results(1),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdjustSchedule(ByVal pUser As String, ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pLastTime As String, ByVal pLevel As String, ByVal pDepo As String) As Integer
            Dim results() As Object = Me.Invoke("AdjustSchedule", New Object() {pUser, pFormNo, pFormSno, pStep, pSeqNo, pLastTime, pLevel, pDepo})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginAdjustSchedule(ByVal pUser As String, ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pStep As Integer, ByVal pSeqNo As Integer, ByVal pLastTime As String, ByVal pLevel As String, ByVal pDepo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdjustSchedule", New Object() {pUser, pFormNo, pFormSno, pStep, pSeqNo, pLastTime, pLevel, pDepo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAdjustSchedule(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStartTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStartTime(ByVal pNowDateTime As String, ByVal pDepo As String) As String
            Dim results() As Object = Me.Invoke("GetStartTime", New Object() {pNowDateTime, pDepo})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginGetStartTime(ByVal pNowDateTime As String, ByVal pDepo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStartTime", New Object() {pNowDateTime, pDepo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetStartTime(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLeadTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLeadTime(ByVal pFormNo As String, ByVal pStep As Integer, ByVal pLevel As String, ByVal pQCLT As Integer, ByVal pNowDateTime As Date, ByRef pStartTime As Date, ByRef pEndTime As Date, ByVal pDepo As String) As Integer
            Dim results() As Object = Me.Invoke("GetLeadTime", New Object() {pFormNo, pStep, pLevel, pQCLT, pNowDateTime, pStartTime, pEndTime, pDepo})
            pStartTime = CType(results(1),Date)
            pEndTime = CType(results(2),Date)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetLeadTime(ByVal pFormNo As String, ByVal pStep As Integer, ByVal pLevel As String, ByVal pQCLT As Integer, ByVal pNowDateTime As Date, ByVal pStartTime As Date, ByVal pEndTime As Date, ByVal pDepo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLeadTime", New Object() {pFormNo, pStep, pLevel, pQCLT, pNowDateTime, pStartTime, pEndTime, pDepo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetLeadTime(ByVal asyncResult As System.IAsyncResult, ByRef pStartTime As Date, ByRef pEndTime As Date) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pStartTime = CType(results(1),Date)
            pEndTime = CType(results(2),Date)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReadTimeLimit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReadTimeLimit(ByVal pNowDateTime As String, ByVal pDepo As String) As String
            Dim results() As Object = Me.Invoke("GetReadTimeLimit", New Object() {pNowDateTime, pDepo})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginGetReadTimeLimit(ByVal pNowDateTime As String, ByVal pDepo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetReadTimeLimit", New Object() {pNowDateTime, pDepo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetReadTimeLimit(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReadLeadTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReadLeadTime(ByVal pNowDateTime As String, ByRef pStartTime As String, ByRef pEndTime As String, ByVal pDepo As String) As Integer
            Dim results() As Object = Me.Invoke("GetReadLeadTime", New Object() {pNowDateTime, pStartTime, pEndTime, pDepo})
            pStartTime = CType(results(1),String)
            pEndTime = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetReadLeadTime(ByVal pNowDateTime As String, ByVal pStartTime As String, ByVal pEndTime As String, ByVal pDepo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetReadLeadTime", New Object() {pNowDateTime, pStartTime, pEndTime, pDepo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetReadLeadTime(ByVal asyncResult As System.IAsyncResult, ByRef pStartTime As String, ByRef pEndTime As String) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pStartTime = CType(results(1),String)
            pEndTime = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastTimeCustom", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLastTimeCustom(ByVal pUser As String, ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pNextStep As Integer, ByVal pFlowType As Integer, ByVal pNowDateTime As Date, ByVal pSimulation As Integer, ByRef pLastTime As Date, ByRef pCount1 As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetLastTimeCustom", New Object() {pUser, pFormNo, pFormSno, pNextStep, pFlowType, pNowDateTime, pSimulation, pLastTime, pCount1})
            pLastTime = CType(results(1),Date)
            pCount1 = CType(results(2),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetLastTimeCustom(ByVal pUser As String, ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pNextStep As Integer, ByVal pFlowType As Integer, ByVal pNowDateTime As Date, ByVal pSimulation As Integer, ByVal pLastTime As Date, ByVal pCount1 As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLastTimeCustom", New Object() {pUser, pFormNo, pFormSno, pNextStep, pFlowType, pNowDateTime, pSimulation, pLastTime, pCount1}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetLastTimeCustom(ByVal asyncResult As System.IAsyncResult, ByRef pLastTime As Date, ByRef pCount1 As Integer) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pLastTime = CType(results(1),Date)
            pCount1 = CType(results(2),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActualStartTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActualStartTime(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pLoading As Integer, ByVal pWorkID As String, ByVal pDepo As String, ByRef pAStartTime As String) As Integer
            Dim results() As Object = Me.Invoke("GetActualStartTime", New Object() {pFormNo, pFormSno, pLoading, pWorkID, pDepo, pAStartTime})
            pAStartTime = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetActualStartTime(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pLoading As Integer, ByVal pWorkID As String, ByVal pDepo As String, ByVal pAStartTime As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetActualStartTime", New Object() {pFormNo, pFormSno, pLoading, pWorkID, pDepo, pAStartTime}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetActualStartTime(ByVal asyncResult As System.IAsyncResult, ByRef pAStartTime As String) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pAStartTime = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustLeadTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdjustLeadTime(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pNextStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pNowDateTime As Date, ByRef pStartTime As Date, ByRef pEndTime As Date) As Integer
            Dim results() As Object = Me.Invoke("AdjustLeadTime", New Object() {pFormNo, pFormSno, pNextStep, pSeqNo, pDepo, pNowDateTime, pStartTime, pEndTime})
            pStartTime = CType(results(1),Date)
            pEndTime = CType(results(2),Date)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginAdjustLeadTime(ByVal pFormNo As String, ByVal pFormSno As Integer, ByVal pNextStep As Integer, ByVal pSeqNo As Integer, ByVal pDepo As String, ByVal pNowDateTime As Date, ByVal pStartTime As Date, ByVal pEndTime As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdjustLeadTime", New Object() {pFormNo, pFormSno, pNextStep, pSeqNo, pDepo, pNowDateTime, pStartTime, pEndTime}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAdjustLeadTime(ByVal asyncResult As System.IAsyncResult, ByRef pStartTime As Date, ByRef pEndTime As Date) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pStartTime = CType(results(1),Date)
            pEndTime = CType(results(2),Date)
            Return CType(results(0),Integer)
        End Function
    End Class
End Namespace
